-- | Module to collect all Plutus dependencies of cooked-validators; no other
-- module should import anything directly from Plutus.
module Cooked.PlutusDeps
  ( --
    (PlutusTx.Lattice.\/),
    (PlutusTx.Numeric.+),
    (PlutusTx.Numeric.-),
    (PlutusTx.Prelude..),
    (PlutusTx.Prelude.==),
    Ledger.Ada.adaSymbol,
    Ledger.Ada.adaToken,
    Ledger.Ada.fromValue,
    Ledger.Ada.getLovelace,
    Ledger.Ada.lovelaceValueOf,
    Ledger.Ada.toValue,
    Ledger.Address (..),
    Ledger.Address.PaymentPubKeyHash (..),
    Ledger.Address.StakePubKeyHash (..),
    Ledger.Address.scriptAddress,
    Ledger.Address.scriptHashAddress,
    Ledger.Blockchain.OnChainTx (..),
    Ledger.CardanoWallet.MockWallet,
    Ledger.CardanoWallet.WalletNumber (..),
    Ledger.CardanoWallet.fromWalletNumber,
    Ledger.CardanoWallet.knownMockWallets,
    Ledger.CardanoWallet.mwStakeKey,
    Ledger.CardanoWallet.mwWalletId,
    Ledger.CardanoWallet.paymentPrivateKey,
    Ledger.CardanoWallet.paymentPubKey,
    Ledger.ChainIndexTxOut (..),
    Ledger.Constraints.MkTxError,
    Ledger.Constraints.OffChain.tx,
    Ledger.Constraints.ScriptLookups,
    Ledger.Constraints.TxConstraint (..),
    Ledger.Constraints.TxConstraints,
    Ledger.Constraints.UnbalancedTx (..),
    Ledger.Constraints.adjustUnbalancedTx,
    Ledger.Constraints.mintingPolicy,
    Ledger.Constraints.mkTx,
    Ledger.Constraints.mustBeSignedBy,
    Ledger.Constraints.mustMintValue,
    Ledger.Constraints.mustMintValueWithRedeemer,
    Ledger.Constraints.mustPayToOtherScript,
    Ledger.Constraints.mustSpendPubKeyOutput,
    Ledger.Constraints.mustSpendScriptOutput,
    Ledger.Constraints.mustValidateIn,
    Ledger.Constraints.otherData,
    Ledger.Constraints.otherScript,
    Ledger.Constraints.ownStakePubKeyHash,
    Ledger.Constraints.unspentOutputs,
    Ledger.Credential.Credential (..),
    Ledger.Credential.StakingCredential (..),
    Ledger.Crypto.toPublicKey,
    Ledger.DiffMilliSeconds,
    Ledger.Fee.estimateTransactionFee,
    Ledger.Index.ScriptValidationEvent,
    Ledger.Index.UtxoIndex (..),
    Ledger.Index.ValidationCtx (..),
    Ledger.Index.ValidationError (ScriptFailure),
    Ledger.Index.ValidationPhase (..),
    Ledger.Index.initialise,
    Ledger.Index.insert,
    Ledger.Index.insertCollateral,
    Ledger.Index.minFee,
    Ledger.Index.runValidation,
    Ledger.Index.validateTransaction,
    Ledger.Interval.Interval,
    Ledger.Interval.always,
    Ledger.Interval.contains,
    Ledger.Interval.from,
    Ledger.Interval.intersection,
    Ledger.Interval.overlaps,
    Ledger.Interval.to,
    Ledger.POSIXTime,
    Ledger.POSIXTimeRange,
    Ledger.Params,
    Ledger.PubKey,
    Ledger.PubKeyHash,
    Ledger.ScriptContext,
    Ledger.Scripts.Datum (..),
    Ledger.Scripts.DatumHash,
    Ledger.Scripts.Redeemer (..),
    Ledger.Scripts.Script (..),
    Ledger.Scripts.ScriptError (EvaluationError),
    Ledger.Scripts.Validator (..),
    Ledger.Scripts.ValidatorHash (..),
    Ledger.Scripts.mkMintingPolicyScript,
    Ledger.Slot (..),
    Ledger.TimeSlot.SlotConfig,
    Ledger.TimeSlot.posixTimeRangeToContainedSlotRange,
    Ledger.TimeSlot.posixTimeToEnclosingSlot,
    Ledger.TimeSlot.scSlotLength,
    Ledger.TimeSlot.slotToBeginPOSIXTime,
    Ledger.TimeSlot.slotToEndPOSIXTime,
    Ledger.TimeSlot.slotToPOSIXTimeRange,
    Ledger.Tx.CardanoTx (..),
    Ledger.Tx.Tx,
    Ledger.Tx.TxIn (..),
    Ledger.Tx.TxInType (..),
    Ledger.Tx.addSignature',
    Ledger.Tx.getCardanoTxId,
    Ledger.Tx.txCollateral,
    Ledger.Tx.txData,
    Ledger.Tx.txFee,
    Ledger.Tx.txId,
    Ledger.Tx.txInputs,
    Ledger.Tx.txMint,
    Ledger.Tx.txOutDatum,
    Ledger.Tx.txOutputs,
    Ledger.Tx.txValidRange,
    Ledger.TxId,
    Ledger.TxOut (..),
    Ledger.TxOutRef,
    Ledger.Typed.Scripts.Any,
    Ledger.Typed.Scripts.DatumType,
    Ledger.Typed.Scripts.MintingPolicy,
    Ledger.Typed.Scripts.RedeemerType,
    Ledger.Typed.Scripts.TypedValidator,
    Ledger.Typed.Scripts.mkUntypedMintingPolicy,
    Ledger.Typed.Scripts.unsafeMkTypedValidator,
    Ledger.Typed.Scripts.validatorAddress,
    Ledger.Typed.Scripts.validatorScript,
    Ledger.Validation.EmulatorEra,
    Ledger.Validation.UTxO,
    Ledger.Validation.addSignature,
    Ledger.Validation.fromPlutusIndex,
    Ledger.Validation.fromPlutusTx,
    Ledger.Validation.hasValidationErrors,
    Ledger.ValidationErrorInPhase,
    Ledger.Value.AssetClass (..),
    Ledger.Value.CurrencySymbol (..),
    Ledger.Value.TokenName (..),
    Ledger.Value.Value (..),
    Ledger.Value.assetClass,
    Ledger.Value.assetClassValue,
    Ledger.Value.assetClassValueOf,
    Ledger.Value.flattenValue,
    Ledger.Value.leq,
    Ledger.Value.valueOf,
    Ledger.allowBigTransactions,
    Ledger.fromMilliSeconds,
    Ledger.fromTxOut,
    Ledger.getPOSIXTime,
    Ledger.minAdaTxOut,
    Ledger.pSlotConfig,
    Ledger.pubKeyHash,
    Ledger.toTxOut,
    Ledger.unPaymentPrivateKey,
    Ledger.unPaymentPubKey,
    Plutus.Script.Utils.V1.Scripts.datumHash,
    Plutus.Script.Utils.V1.Scripts.mintingPolicyHash,
    Plutus.Script.Utils.V1.Scripts.scriptCurrencySymbol,
    Plutus.Script.Utils.V1.Scripts.validatorHash,
    PlutusTx.AssocMap.member,
    PlutusTx.AssocMap.singleton,
    PlutusTx.BuiltinData,
    PlutusTx.Builtins.Class.stringToBuiltinByteString,
    PlutusTx.FromData,
    PlutusTx.Numeric.negate,
    PlutusTx.Prelude.Bool (..),
    PlutusTx.Prelude.Eq,
    PlutusTx.Prelude.Integer,
    PlutusTx.Prelude.curry,
    PlutusTx.ToData,
    PlutusTx.UnsafeFromData,
    PlutusTx.compile,
    PlutusTx.fromBuiltinData,
    PlutusTx.getPlc,
    PlutusTx.toBuiltinData,
    singletonConstraint,
  )
where

import qualified Ledger
import qualified Ledger.Ada
import qualified Ledger.Address
import qualified Ledger.Blockchain
import qualified Ledger.CardanoWallet
import qualified Ledger.Constraints
import qualified Ledger.Constraints.OffChain
import qualified Ledger.Constraints.TxConstraints
import qualified Ledger.Credential
import qualified Ledger.Crypto
import qualified Ledger.Fee
import qualified Ledger.Index
import qualified Ledger.Interval
import qualified Ledger.Scripts
import qualified Ledger.TimeSlot
import qualified Ledger.Tx
import qualified Ledger.Typed.Scripts
import qualified Ledger.Validation
import qualified Ledger.Value
import qualified Plutus.Script.Utils.V1.Scripts
import qualified PlutusTx
import qualified PlutusTx.AssocMap
import qualified PlutusTx.Builtins.Class
import qualified PlutusTx.Lattice
import qualified PlutusTx.Numeric
import qualified PlutusTx.Prelude

singletonConstraint :: Ledger.Constraints.TxConstraint -> Ledger.Constraints.TxConstraints i o
singletonConstraint = Ledger.Constraints.TxConstraints.singleton
